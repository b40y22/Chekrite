version: '3.5'

services:

  mysql:
    build:
      context: docker/mysql/
    container_name: mysql
    hostname: mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - ./docker/mysql/.profile:/root/
      - ./docker/mysql/db:/var/lib/mysql
    working_dir: /var/lib/mysql
    networks:
      web_network:
        ipv4_address: 172.11.0.10

  nginx:
    build:
      context: docker/nginx/
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./docker/nginx/.profile:/root/
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./apps/frontend:/var/www/html/frontend
      - ./apps/backend:/var/www/html/backend
    working_dir: /var/www/html/
    networks:
      web_network:
        ipv4_address: 172.11.0.11

  php:
    build:
      context: docker/php
    container_name: php
    hostname: php
    depends_on:
      - mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Europe/Kiev
    restart: always
    volumes:
      - ./apps/backend:/var/www/html/backend
      - ./docker/php/.profile:/root
      - ./docker/php/script:/root/script
    working_dir: /var/www/html/backend
    command: bash -c "php-fpm"
    networks:
      web_network:
        ipv4_address: 172.11.0.12

  nodejs:
    build:
      context: docker/nodejs/
    command: bash
    container_name: nodejs
    hostname: nodejs
    restart: always
    tty: true
    volumes:
      - ./docker/nodejs/.profile:/root/
      - ./apps/frontend:/var/www/html/frontend
    working_dir: /var/www/html/frontend
    networks:
      web_network:
        ipv4_address: 172.11.0.14

networks:
  web_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.11.0.0/16
